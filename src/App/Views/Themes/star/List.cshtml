@model ListModel
@inject Core.Services.IDataService _db
@{
    ViewData["bodyClass"] = "home";
    var pgr = Model.Pager;
    var first3 = _db.BlogPosts.All().OrderByDescending(p => p.Published).Take(3).ToList();
}
<!DOCTYPE html>
<html lang="en">
<head>
    <partial name="~/Views/Themes/star/_Shared/_Head.cshtml" />
</head>
<body class="@ViewData["bodyClass"]">

    <partial name="~/Views/Themes/star/_Shared/_Header.cshtml" />


    <div class="page-content">

        @if (Model.PostListType == PostListType.Search)
        {
        <div class="page-search">
            <div class="container">
                <h2 class="page-search-title"><i class="fa fa-search"></i> @Model.Blog.Title</h2>
            </div>
        </div>
        }
        else if (Model.PostListType == PostListType.Author)
        {
        <div class="page-author">
            <div class="container">
                <h2 class="page-author-title">
                    <img src="~/@Model.Author.Avatar" class="page-author-avatar" />
                    <span class="page-author-name">@Model.Author.DisplayName</span>
                </h2>
            </div>
        </div>
        }
        else if (Model.PostListType == PostListType.Category)
        {
        <div class="page-category">
            <div class="container">
                <h2 class="page-category-title"><i class="fa fa-tag"></i> @ViewBag.Category</h2>
            </div>
        </div>
        } else {
        <div class="blog-cover">
            <div class="blog-cover-wrap">
                <div class="blog-cover-content">
                    <h1>Hello,<br /> My Name is Jane!</h1>
                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>

                </div>
            </div>
        </div>
        }

        @if (Model.Posts != null)
        {
            foreach (var item in Model.Posts)
            {
                var img = string.IsNullOrEmpty(item.Cover) ? Model.Blog.Cover : item.Cover;
                var avatar = string.IsNullOrEmpty(item.Author.Avatar) ? "lib/img/avatar.jpg" : item.Author.Avatar;
        <article class="post">

            <div class="container">
                <div class="row">
                    <div class="col-sm-2">
                        <time class="post-meta-time">@item.Published.ToFriendlyDateString()</time>
                    </div>
                    <div class="col-sm-10">

                        <header class="post-header">
                            <div class="post-meta-category">
                                <a href="#">Technology</a>
                            </div>
                            <h2 class="post-title"><a href="~/posts/@item.Slug">@item.Title</a></h2>
                            @if (item.Featured)
                                {
                            <span class="post-featrued-label" title="Featured" data-toggle="tooltip"><i class="fa fa-star"></i></span>
                                }
                            <div class="post-meta">
                                <a class="post-meta-author" href="~/authors/@item.Author.AppUserName">
                                    <img class="post-meta-author-avatar" src="~/@avatar" alt="Author: @item.Author.DisplayName" />
                                    <span class="post-meta-author-name">@item.Author.DisplayName</span>
                                </a>
                            </div>
                        </header>

                        <div class="post-description">@Html.Raw(Markdig.Markdown.ToHtml(item.Description))</div>


                        <a href="~/posts/@item.Slug" class="post-more">Read More</a>

                    </div>

                </div>
            </div>
        </article>
            }
        }

        @if (pgr != null && (pgr.ShowOlder || pgr.ShowNewer))
        {
        <ul class="pagination justify-content-center">
            @if (pgr.ShowOlder)
            {
            <li class="item item-prev">
                <a class="item-link" href="~/@pgr.LinkToOlder">
                    <i class="fa fa-chevron-left"></i>
                </a>
            </li>
            }
            @if (pgr.ShowNewer)
            {
            <li class="item item-next">
                <a class="item-link" href="~/@pgr.LinkToNewer">
                    <i class="fa fa-chevron-right"></i>
                </a>
            </li>
            }
        </ul>
        }
    </div>

    <partial name="~/Views/Themes/star/_Shared/_Footer.cshtml" />

</body>
</html>
